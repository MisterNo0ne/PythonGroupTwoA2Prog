from enemy import Enemy
from item import Item
from item import Weapon
from npc import Npc
from obstacle import Obstacle
from player import Player
from sign import Sign

#why can you freeze a water type hello??

def setup():
    size(600, 600)
    frameRate(24)
    print("hello gamer welcom to epic spell adventure game smiley face =)")

    global gameState, ghoul, skeleton, zombie, spider, debugMode, gamer, keyPresses, bkgrnd, enemyList, currentEnemy, skltnimg, ghlimg, spdrimg, zomimg, attacktype, turn, blocks, fightbackgrounds, animationWaitTimer, endWaiting, attackImage, turn1wait, turn2wait, turn3wait, wizard, cactus, cactusimg, chestimg, chestopened, amogus, sandBoss, sandimg, skltnbossimg, castleimg, skltnBoss, castleBoss, blockFile, merchant, shopimg, hasRock, shopBackground, signimg, signs, bushBlock, sandBlock, skeletonBossBeaten, sandBossBeaten, icons, itemsOwned, weaponsOwned, weaponImgs, switchingWeapon, currentWeapon, cPhase, jumpscaring, jumpscared, wolfimg, phaseCounter, phaseChanging
    
    #load files
    fightbackgrounds = []
    fightbackgrounds.append(loadImage("plainsfightbackground.png"))
    fightbackgrounds.append(loadImage("epicfightbackground.jpeg"))
    fightbackgrounds.append(loadImage("desertfightbackground.png"))
    fightbackgrounds.append(loadImage("volcanofightbackground.png"))
    skltnimg = loadImage("skeletonIdle.png")
    zomimg = loadImage("Zombie.png")
    wolfimg = loadImage("wolf.png")
    spdrimg = loadImage("smallenemyspider.png")
    ghlimg = loadImage("spookyGhoul.png")
    bkgrnd = loadImage("MapBackground.png")
    wizard = loadImage("Wizard.png")
    cactusimg = loadImage("Angry buff cactus.png") 
    chestimg = loadImage("chest.png")
    sandimg = loadImage("sandboss.png")
    skltnbossimg = loadImage("Skeleton Boss.png")
    castleimg = loadImage("evilCastle.png")
    blockFile = loadStrings("blockData.txt")
    merchant = loadImage("Shopkeeper.png")
    shopimg = loadImage("Shop.png")
    shopBackground = loadImage("grassBackground.png")
    signimg = loadImage("Sign.png")
    bushBlock = loadImage("Bush Blocking area.png")
    sandBlock = loadImage("Sandstone blocking area.png")
    icons = []
    icons.append(loadImage("icons/Fire Icon.png"))
    icons.append(loadImage("icons/Water Icon.png"))
    icons.append(loadImage("icons/Grass Icon.png"))
    icons.append(loadImage("icons/Lightning Icon.png"))
    icons.append(loadImage("icons/Ice Icon.png"))
    icons.append(loadImage("icons/Rock Icon.png"))
    icons.append(loadImage("icons/Poison Icon.png"))
    weaponImgs = []
    weaponImgs.append(loadImage("weapons/sword.png"))
    weaponImgs.append(loadImage("weapons/bow.png"))
    weaponImgs.append(loadImage("weapons/dagger.png"))
    weaponImgs.append(loadImage("weapons/spear.png"))
    weaponImgs.append(loadImage("weapons/mace.png"))
    
    #enemy declarators or smth
    cactus = Enemy(200, "cactus", "grass", 300, 1700, cactusimg, "none", 30, False, 0)
    sandBoss = Enemy(300, "Sand Boss", "rock", 200, 1300, sandimg, "none", 40, True, 2)
    skltnBoss = Enemy(400, "Skeleton Boss", "grass", 2000, 1775, skltnbossimg, "none", 40, True, 1)
    castleBoss = Enemy(500, "Final Boss", "fire", 2000, 150, castleimg, "none", 50, True, 3)
    enemyList = [cactus, sandBoss, skltnBoss, castleBoss] 
    enemyList.append(Enemy(80, "ghoul", "grass", 2400, 1450, ghlimg, "none", 20, False, 1))
    enemyList.append(Enemy(100, "skeleton", "grass", 2350, 1650, skltnimg, "none", 20, False, 1))
    enemyList.append(Enemy(80, "ghoul", "fire", 1050, 2000, ghlimg, "none", 20, False, 2))
    enemyList.append(Enemy(100, "skeleton", "rock", 850, 1900, skltnimg, "none", 20, False, 2))
    enemyList.append(Enemy(180, "zombie", "fire", 850, 1900, skltnimg, "none", 25, False, 3))
    spawnEnemies()
    
    gamer = Player(1400, 1300, 100, wizard) 
    
    itemsOwned = []
    itemsOwned.append(Item("Coins", 10.0))
    itemsOwned.append(Item("Health Pots", 0))
    itemsOwned.append(Item("Daggers", 0))
    itemsOwned.append(Item("Armor", "leather"))
    
    #REMEMBER: order is fire, water, grass, lightning, ice, rock
    weaponsOwned = []
    weaponsOwned.append(Weapon("Sword", 25.0, [1, 1, 1.5, 0.5, 1, 1], [0.8, 1, 1, 0.8, 1, 1.5], weaponImgs[0]))
    weaponsOwned.append(Weapon("Bow", 20.0, [1, 0.8, 1, 0.8, 1.5, 1], [0.8, 1, 1, 1.5, 1.2, 0.5], weaponImgs[1]))
    
    blocks = []
    makeBlocks()
    
    signs = []
    signs.append(Sign(725, 600, "idk how to rhyme :(", signimg, 16, 1))
    signs.append(Sign(2050, 450, "The final battle", signimg, 32, 1))
    signs.append(Sign(700, 1750, "RUN!!!1!", signimg, 32, 1))
    signs.append(Sign(500, 1750, "I told you to run", signimg, 20, 1))
    signs.append(Sign(350, 1800, "Having some armor is gonna be\npretty important.\nThis boss hits hard!", signimg, 12, 3))
    signs.append(Sign(1400, 1300, "Welcome to the land of spellaria!\nYou have been chosen to defeat the\n3 great evils of this land!", signimg, 12, 3))
    signs.append(Sign(1300, 1300, "To the west lies your first challenge, the\ngreat sand behemoth. Defeat it andyou'll\ngain access to a powerful new spell.", signimg, 11, 3))
    signs.append(Sign(1500, 1300, "To the east lies the formidable skeleton\nlord in the dark forest. Defeat it to\nobtain vast riches to aid your quest.", signimg, 12, 3))
    signs.append(Sign(1400, 1200, "To the north lies your final foe, the\nevil presence residing in the Dark Castle.\n Defeat it and you'll have become the\nmost powerful wizard in the land.", signimg, 10, 4))
    #animations
    turn1wait = 50
    turn2wait = 30
    turn3wait = 60
    animationWaitTimer = 0
    endWaiting = False

    #other stuff
    gameState = "map"
    attackType = "amgpsu"
    currentEnemy= -1
    currentWeapon = 0
    chestopened = False
    hasRock = False
    amogus  = True #amogus is like hax mode, where during this u can hack in more health pots and daggers and funi stuff
    debugMode = True 
    skeletonBossBeaten = False
    sandBossBeaten = False
    switchingWeapon = False
    keyPresses = [False, False, False, False]
    turn = 1
    attackImage = loadImage("WaterBolt.png")
    cPhase = 0
    jumpscaring = False
    jumpscared = False
    phaseCounter = 0
    phaseChanging = False

#------------------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------------------

def draw():
    global gameState, currentEnemy, enemyList, ghoul, skeleton, turn, animationWaitTimer, gamer, endWaiting, attackType, chestimg, chestopened, merchant, shoping, hasRock, shopBackground, signs, sandBossBeaten, skeletonBossBeaten, itemsOwned, weaponsOwned, cPhase, jumpscaring, jumpscared, phaseCounter, phaseChanging
    #??????????????????????????????????????????????????????
    #if you wanna edit values of global variables you have to put them here
    
#-------------------------------------------------------------------------------FIGHT MODE-------------------------------------------------------------------
    
    if gameState == "fight":
        cEnemy = enemyList[currentEnemy]
        cType = cEnemy.type
        cStatus = cEnemy.status
        cHealth = cEnemy.health
        cElement = cEnemy.element
        
        #final boss gimmick thing
        if cType == "Final Boss" and phaseCounter == 2 and turn == 1:
      #i hate python
            if cElement == "fire" and phaseChanging:
                cElement = "water"
                phaseChanging = False
            if cElement == "water" and phaseChanging:
                cElement = "grass"
                phaseChanging = False
            if cElement == "grass" and phaseChanging:
                cElement = "rock"
                phaseChanging = False
            if cElement == "rock" and phaseChanging:
                cElement = "fire"
                phaseChanging = False
            cEnemy.strength+=5
            print("The Dark Castle magically changed to a " + cElement + " type and grew stronger (+5 strength)")
            phaseCounter = 0
            cStatus = "none"

        if cEnemy.isBoss == True and cPhase == 0: 
            cPhase = 1
        if cType == "Sand Boss" and cPhase == 1: 
            cElement = "rock"
            cEnemy.strength = 20
            ronk = loadImage("rock1.png")
            image(ronk, 500, 200, 100, 100)
            if cHealth<=200: 
                cPhase = 2
                print("The sand boss is fired up with rage!")
                print("It is now a fire type enemy!")
        if cType == "Sand Boss" and cPhase == 2:
            cElement = "fire"
            cEnemy.strength = 40
        # Display logic
        #background(200)
        image(fightbackgrounds[cEnemy.area], 0, 0, width, height)
        renderAttackButtons() #look at the extra fxns section
    
        #show enemy stuff
        if debugMode:
            fill(255)
            noStroke()
            rect(45, 25, 250, 250) #highlight box
        fill(0)
        textSize(24)
        text("Enemy health: " + str(cHealth) + " ", 50, 50)
        if debugMode:
            text("type: " + cType + "\n enemyID: " + str(currentEnemy) + "\n enemy element: " + cElement, 50, 120)
            text("status: " + cStatus, 50, 240)
            text("Phase: " + str(cPhase), 50, 300)
            textSize(32)
            stroke(0)
        cEnemy.display()
        cEnemy.displayStatus()
        cEnemy.healthBarInFight()
        
# Turn logic
        animationWaitTimer -= 2 if animationWaitTimer>0 else 0 #decrement the wait timer if it's above 0
        textSize(20)
        fill(255)
        text("You have " + str(itemsOwned[2].value) + " daggers!", width-200, height-30)
        text("You have " + str(itemsOwned[1].value) + " health potions!", width-520, height-30)
        text("Press H to heal!", width-520, height-60)
        textSize(32)
        
        text(str(animationWaitTimer), width-100, 100)
        text(str(turn), width-100, 140)
        
        
            ##KILLED ENEMY LOGIC
        if endWaiting or cHealth<=0: 
            if cEnemy.type == "cactus":
                jumpscared = True
            if cEnemy.isBoss == True: 
                print("You have felled the " + cType + "! You found many coins, 5 potions, and 5 daggers!")
                itemsOwned[1].value+=5
                itemsOwned[2].value+=5
                itemsOwned[0].value+=150
                gamer.maxHealth +=15
                gamer.health = gamer.maxHealth
                cPhase = 0
                print("Your max health increased!")
                gamer.maxHealth += 25
                print("You have also healed to max for free.")
                gamer.health = gamer.maxHealth
                if cType == "Sand Boss": 
                    hasRock = True
                    sandBossBeaten = True
                    print("A path opened above you!")
                    signs.append(Sign(725, 1100, "Travel directly up from here\nto seek a treasure very cool", signimg, 16, 2))
                    del blocks[0]
                    cPhase = 0
                if cType == "Final Boss": 
                    itemsOwned[0].value+=500
                    print("Congratulations! You have slain the final boss and have completed the game!")
                if cType == "Skeleton Boss":
                    #poison added here
                    itemsOwned[0].value+=100
                    skeletonBossBeaten = True
                    print("A path opened to the left of you!")
                    print("Diamond armor is now available in the shop... for a hefty price.")
                    if not sandBossBeaten:
                        del blocks[1]
                    else:
                        del blocks[0]
            else:
                itemsOwned[0].value += (0.25*cEnemy.maxHealth)   # <-- idea is the amount of gold u get scales with enemy hp
            del enemyList[currentEnemy]
            gameState = "map"
            currentEnemy = 12345
            endWaiting = False
            turn = 1
            animationWaitTimer = 0
            print("\nBack to map screen...\n")
                    
## 2nd turn 
        ##Displays gamer's attack
        timeForAnim = 30 #only the first 30 frames will get the animation
        if turn == 2 and animationWaitTimer >= turn1wait-timeForAnim and attackType != "heal":
            #ellipse(160, 440, 20, 20)
            progressFraction = float(turn1wait-animationWaitTimer)/timeForAnim
            pushMatrix()
            translate(160+(progressFraction*200), 440-(progressFraction*200))
            rotate(radians(315)) #rotates to make the attack diagonal
            image(attackImage, 0, 0, 75, 75) #player attacking
            popMatrix()
        
        ##ENEMY HIT LOGIC
        if animationWaitTimer == 20 and turn == 2: 
            cw = weaponsOwned[currentWeapon]
            if attackType == "lightning" or attackType == "rock": 
                damage = 30
            if attackType == "heal":
                damage = 0
            if attackType == "grass" or attackType == "fire" or attackType == "water" or attackType == "ice": #dont attack if the player healed thats dumb
                damage = 20
            if cType == "Sand Boss" and cPhase == 1: 
                damage*=0.7
            cEnemy.hit(damage, attackType, cw)
        
        ##PLAYER HIT LOGIC
        if turn == 2 and animationWaitTimer == 0:
            enemyHitDamage = cEnemy.strength
            if itemsOwned[3].value == "iron": 
                enemyHitDamage *= 0.75
            if itemsOwned[3].value == "diamond": 
                enemyHitDamage *= 0.5
            if cStatus == "frozen" or (cElement == "fire" and cStatus == "wet") or cStatus == "zapped": 
                enemyHitDamage *= 0.6
            if cStatus == "tangled" and cElement == "grass": 
                enemyHitDamage*=1.25
                print("The grass " + cType + " grows stronger from the vegetation! (1.25x)")
            if cStatus == "overgrown" and cElement == "grass": 
                enemyHitDamage*=1.5
                print("The grass " + cType + " grows super strong from the overgrown vines! (1.5x)")
            gamer.health -= enemyHitDamage
            println("The gamer was hurt for " + str(enemyHitDamage) + " damage!")
            turn = 3
            animationWaitTimer = turn2wait
        
## 3rd turn
        ##Displays player hurting
        if turn == 3 and animationWaitTimer != 0:
            #player getting hurt
            fractionOfAnimLeft = float(animationWaitTimer)/turn2wait
            gamer.showInFight(fractionOfAnimLeft)
        else:
            gamer.showInFight(0)
          
        ##kills the player to death    
        if gamer.health<=0 and turn == 3 and animationWaitTimer == 0:
            turn = 5
            animationWaitTimer = 50
            print("oh no!1!11!1!11 uy deied!!11! you are loser L game over")
            
        ##Resolve statuses
        if turn == 3 and animationWaitTimer == 0:
            healthChange = fightTurnThreeHealth(cEnemy.status, cEnemy.element)
            displayText = fightTurnThreeDisplayText(cEnemy.status, cEnemy.element)
            if healthChange > 0:
                displayText += " Your attack healed the enemy by "
                displayText += str(healthChange) + " health."
            elif healthChange < 0:
                displayText += " Your attack hurt the enemy for an additional "
                displayText += str(-healthChange) + " damage."
            print(displayText)
            cEnemy.health += healthChange
            cEnemy.status = fightTurnThreeStatus(cEnemy.status, cEnemy.element)
            turn = 1
            
            # Enemy death logic
            print("The enemy's health is now " + str(cEnemy.health))
            print("Your health is now " + str(gamer.health) + " out of " + str(gamer.maxHealth))
            if cHealth<=0:
                print("The enemy died!")
                print("\nBack to the map...\n")
                endWaiting = True
                animationWaitTimer = turn3wait
            else: 
                print(" ==-== New Cycle ==-==")
                if cType == "Final Boss": 
                    phaseCounter +=1
                    phaseChanging = True
        
## 5th turn
        # Gamer death logic
        if turn == 5 and animationWaitTimer !=0: 
            fill(0)
            rect(0,0,width,height)
            fill(255)
            text("You passed out!",(width/2)-50, (height/2))
        if turn == 5 and animationWaitTimer == 0: 
            gameState = "map"
            gamer.mapPosX = 1400
            gamer.mapPosY = 1300
            gamer.health = (gamer.maxHealth/2)
            cEnemy.health = cEnemy.maxHealth
            print("You managed to escape, but lost some coins")
            itemsOwned[0].value-=15
            if itemsOwned[0].value<=0: 
                itemsOwned[0].value = 0
            turn = 1
        
        
        #boss gimmick time!
        if cType == "Sand Boss": 
            #if cHealth > 200: 
            #    cPhase = 1
            if cPhase == 1 and cHealth <= 200: 
                print("The Rock shield shatters to pieces, leaving the sand boss defenseless!")
                cPhase = 2
        
#----------------------------------------------------------------------MAP MODE------------------------------------------------------------------------------

    if gameState == "map":
        gamer.moveOnMap(keyPresses, blocks)
        
        #jumpscare DDDD:
        if (not jumpscaring) and (gamer.mapPosX > 750 and gamer.mapPosX < 800 and gamer.mapPosY > 1650 and gamer.mapPosY < 1800):
            jumpscaring = True
        if jumpscaring and (not jumpscared):
            enemyList[0].mapPosX += 22
        
        background(12, 89, 183)
        image(bkgrnd,(width/2)-gamer.mapPosX,(height/2)-gamer.mapPosY)
        
        stroke(0)
        strokeWeight(4)
        #starting platform thingy
        fill(127)
        rect(1300-gamer.mapPosX+(width/2),1200-gamer.mapPosY+(height/2),200,200)
        
    #chest
        #so currently chest hitbox is super jank sorry
        if pointInsideRectangle(gamer.mapPosX, gamer.mapPosY, 450-gamer.mapPosX+(width/2), 200-gamer.mapPosY+(height/2), 150, 100) and chestopened == False: 
            itemsOwned[2].value+=10
            itemsOwned[1].value+=10
            itemsOwned[0].value+=100
            chestopened = True
        if chestopened == False:      #<-- this would mean deleting the chest but that might look weird
            image(chestimg, 380-gamer.mapPosX+(width/2), 160-gamer.mapPosY+(height/2)+50, 75, 75 )   
        
        gamer.showOnMap()
    
        for s in signs:
            s.showSign(gamer.mapPosX, gamer.mapPosY)
        
        image(merchant, 1600-gamer.mapPosX+(width/2), 1600-gamer.mapPosY+(height/2), 100, 100) # this aint rendering fo same reason
        image(shopimg, 1700-gamer.mapPosX+(width/2), 1615-gamer.mapPosY+(height/2), 150, 150)
        fill(0)
        textSize(22)
        text("Merchant", 1610-gamer.mapPosX+(width/2), 1710-gamer.mapPosY+(height/2))
        # fixed the hitbox :)
        if pointInsideRectangle(gamer.mapPosX, gamer.mapPosY, 2900-gamer.mapPosX+(width/2), 2870-gamer.mapPosY+(height/2), 200, 230): 
            print("You entered the merchant's shop!")
            gameState = "store"
            
        for e in enemyList:
            e.mapDisplay(gamer.mapPosX, gamer.mapPosY, debugMode)
            hitLength = 232 if e.isBoss else 132
            if pointInsideRectangle(gamer.mapPosX, gamer.mapPosY, e.mapPosX-32, e.mapPosY-32, hitLength, hitLength) and gamer.health>0: 
                currentEnemy = enemyList.index(e)
                print(" ==-== " + enemyList[currentEnemy].element + " " + enemyList[currentEnemy].type + " ==-== ")
                gameState = "fight"
        
        if debugMode:
            for o in blocks:
                o.display(gamer.mapPosX, gamer.mapPosY)
        
        if not sandBossBeaten:
            image(sandBlock, 247-gamer.mapPosX+(width/2), 1220-gamer.mapPosY+(height/2))
        if not skeletonBossBeaten:
            image(bushBlock, 1900-gamer.mapPosX+(width/2), 1680-gamer.mapPosY+(height/2))
        
        inventoryBox()
        displayPlayerHealth()
#-------------------------------------------------------STORE MODE--------------------------------------------------------------------#
    if gameState == "store":
        #i have no clue what to do here yet, prolly something similar to fight mode though where if u have coins and
        #if u click in the boxes then u buy stuff and also render some store guy toob
        
        #background(127)
        image(shopBackground,0,0,600,600)
        image(shopimg, 375, 100, 300, 300)
        image(merchant, 300, 200, 100, 100)
        
        inventoryBox()
        
        fill(255)
        stroke(0)
        strokeWeight(4)
        rect(50,50,220,110)
        fill(0)
        textSize(22)
        text("Welcome to my shop. \nFeel free to  buy \nanything you need!\nunless we dont have it lol", 60, 75)
        
        #hpot
        fill(color(127) if itemsOwned[0].value<25 else color(100, 255, 100))
        rect(100,400,100,25)
        
        #dagger
        fill(color(127) if itemsOwned[0].value<5 else color(100, 255, 100))
        rect(250,400,100,25)
        
        #armor
        fill(color(127) if itemsOwned[0].value<100 else color(100, 255, 100))
        rect(400,400,100,25)
        
        
        #text for items
        fill(0)
        text("Health Potion", 100, 390)
        text("25 coins", 105, 420)
        
        text("Dagger", 250, 390)
        text("5 coins", 255, 420)
        
        if itemsOwned[3].value == "leather": 
            text("Iron armor", 400, 390)
            text("100 coins", 405, 420)
        elif itemsOwned[3].value == "iron":
            if skeletonBossBeaten: 
                text("Diamond Armor", 400, 390)
                text("300 coins", 405, 420)
            else: 
                text("No more armor", 400, 390)
        #text("100 coins", 405, 420)
        
        #Exit button
        fill(200,50,50)
        rect(440,500,200,25)
        fill(0)
        text("Exit to map...", 450, 490)
        
#------------------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------------------
    
def mousePressed():
    global turn, attackImage, animationWaitTimer, attackType, hasRock, gameState, gamer, itemsOwned, currentWeapon, switchingWeapon
    
    if gameState == "fight" and gamer.health>=1 and turn == 1:
        if pointInsideCircle(mouseX, mouseY, 430, 400, 25): 
            switchingWeapon = not switchingWeapon
        if pointInsideCircle(mouseX, mouseY, 430, 330, 25): #fire
            attackImage = loadImage("FireBall.png")
            attackType = "fire"
            turn = 2
            animationWaitTimer = turn1wait
        if pointInsideCircle(mouseX, mouseY, 490, 365, 25): #water
            attackImage = loadImage("WaterBolt.png")
            attackType = "water"
            turn = 2
            animationWaitTimer = turn1wait
        if pointInsideCircle(mouseX, mouseY, 490, 435, 25): #grass
            attackImage = loadImage("LeafAttack.png")
            attackType = "grass"
            turn = 2
            animationWaitTimer = turn1wait
        if pointInsideCircle(mouseX, mouseY, 430, 470, 25): #lightning
            attackImage = loadImage("lightningBolt.png")
            attackType = "lightning"
            turn = 2
            animationWaitTimer = turn1wait
        if pointInsideCircle(mouseX, mouseY, 370, 435, 25): #ice
            attackImage = loadImage("icicleAttack.png")
            attackType = "ice"
            turn = 2
            animationWaitTimer = turn1wait
        if pointInsideCircle(mouseX, mouseY, 370, 365, 25) and hasRock: #rock
            attackImage = loadImage("rock1.png")
            attackType = "rock"
            turn = 2
            animationWaitTimer = turn1wait
    
    if gameState == "store": 
        if pointInsideRectangle(mouseX, mouseY, 100,400,100,25) and itemsOwned[0].value>=25:
            itemsOwned[1].value+=1
            itemsOwned[0].value-=25
        if pointInsideRectangle(mouseX, mouseY, 250,400,100,25) and itemsOwned[0].value>=5:
            itemsOwned[2].value+=1
            itemsOwned[0].value-=5
        if pointInsideRectangle(mouseX, mouseY, 400,400,100,25) and itemsOwned[0].value>=100 and itemsOwned[3].value == "leather":
            itemsOwned[3].value = "iron"
            itemsOwned[0].value-=100
            wizard = loadImage("IronWizard.png")
            gamer.playerImage = wizard
        if pointInsideRectangle(mouseX, mouseY, 400,400,100,25) and itemsOwned[0].value>=300 and itemsOwned[3].value == "iron":
            itemsOwned[3].value = "diamond"
            itemsOwned[0].value -= 300
            wizard = loadImage("DiamondWizard.png")
            gamer.playerImage = wizard
        if pointInsideRectangle(mouseX, mouseY, 440,500,200,25):
            gameState = "map"
            gamer.mapPosX=1650
            gamer.mapPosY=1750
            
    if gameState == "map" and amogus:
        gamer.mapPosX += mouseX-300
        gamer.mapPosY += mouseY-300
            
def keyPressed():
    if key == 'w' or keyCode == UP:
        keyPresses[0] = True
    if key == 'a' or keyCode == LEFT:
        keyPresses[1] = True
        if switchingWeapon:
            currentWeapon-=1
            currentWeapon%=len(weaponsOwned)
    if key == 's' or keyCode == DOWN:
        keyPresses[2] = True
    if key == 'd' or keyCode == RIGHT:
        keyPresses[3] = True
        if switchingWeapon:
            currentWeapon+=1
            currentWeapon%=len(weaponsOwned)
    
def keyReleased():
    global gamer, amogus, turn, attackImage, gameState, attackType, animationWaitTimer, currentWeapon
    if key == 'w' or keyCode == UP:
        keyPresses[0] = False
    if key == 'a' or keyCode == LEFT:
        keyPresses[1] = False
    if key == 's' or keyCode == DOWN:
        keyPresses[2] = False
    if key == 'd' or keyCode == RIGHT:
        keyPresses[3] = False
    if key == 'h' and itemsOwned[1].value>0 and turn == 1 and gameState == "fight": 
        print("You used a health potion!")
        gamer.health = gamer.maxHealth
        itemsOwned[1].value -= 1
        attackImage = loadImage("LeafAttack.png")
        attackType = "heal"
        turn = 2
        animationWaitTimer = turn1wait
    if key == 'h' and itemsOwned[1].value>0 and gameState != "fight":
        print("You used a health potion!")
        gamer.health = gamer.maxHealth
        itemsOwned[1].value -= 1
    if key == 'v' and amogus: 
        itemsOwned[1].value+=1
    if key == 'q' and amogus: 
        itemsOwned[2].value+=1
    if key == 'm' and amogus: 
        itemsOwned[0].value+=10
    if key == 'i' and gameState == "map":
        spawnEnemies()
        
def pointInsideRectangle(a, b, x, y, w, h):
    # just returns whether or not the coordinate of the first 2 parameters is in the rectangle defined by the last 4 parameters
    return (a>x) and (a<x+w) and (b>y) and (b<y+h)

def pointInsideCircle(a, b, x, y, r):
    #same as above but circle now; finds the distance between (a,b) and (x,y)
    return pow(pow(a-x, 2) + pow(b-y, 2), 0.5) < r
    
def makeBlocks():
    for vals in blockFile:
        valList = []
        while len(valList) < 3:
            index = 0
            while vals[index] != ' ':
                index += 1
            valList.append(float(vals[:index]))
            vals = vals[index+1:]
        valList.append(float(vals))
        blocks.append(Obstacle(valList[0], valList[1], valList[2], valList[3]))

def renderAttackButtons():
    textSize(18)
    imageMode(CENTER)
    strokeWeight(2.5)
    fill(200 if switchingWeapon else 170)
    circle(430, 400, 140)
    with pushMatrix():
        translate(430, 400)
        rotate(atan2(mouseY-400, mouseX-430))
        imgsize = 90 if switchingWeapon else 70
        image(weaponsOwned[currentWeapon].img, 0, 0, imgsize, imgsize)
    fill(128)
    ellipse(430, 330, 50, 50)
    ellipse(490, 365, 50, 50)
    ellipse(490, 435, 50, 50)
    ellipse(430, 470, 50, 50)
    ellipse(370, 435, 50, 50)
    ellipse(370, 365, 50, 50)
    image(icons[0], 430, 330, 50, 50) #fire
    image(icons[1], 490, 365, 50, 50) #water
    image(icons[2], 490, 435, 50, 50) #grass
    image(icons[3], 430, 470, 50, 50) #lightning
    image(icons[4], 370, 435, 50, 50) #ice
    if hasRock:
        image(icons[5], 370, 365, 50, 50) #rock
    imageMode(CORNER)     

def inventoryBox():
    stroke(0)
    strokeWeight(4)
    fill(120,60,60)
    rect(0,height-100, 250, 100)
    fill(0)
    textSize(28)
    text(str(itemsOwned[2].value) + " daggers", 5, height-65)
    text(str(itemsOwned[1].value) + " health potions", 5, height-20)
    text("c " + str(itemsOwned[0].value), 133, height-65)
    strokeWeight(2)
    line(140, height-80, 140, height-65)
    if itemsOwned[3].value == "iron":   #and debugMode
        textSize(16)
        text("iron armor", 5, height-100)
    if itemsOwned[3].value == "diamond": 
        text("Diamond Armor", 5, height-100)

def displayPlayerHealth(): 
    strokeWeight(4)
    stroke(0)
    fill(255)
    rect(280, 550, 300, 40)
    fill(255, 0, 0)
    noStroke()
    rect(282, 552, 297*(float(gamer.health)/gamer.maxHealth), 37)
    fill(0)
    textSize(18)
    textAlign(CENTER)
    text(str(gamer.health) + " / " + str(gamer.maxHealth), 430, 575)
    textSize(24)
    textAlign(LEFT)

def spawnEnemies():
    global enemyList
    enemyList.append(Enemy(50, "spider", "rock", 700, 1200, spdrimg, "none", 25, False, 0))
    enemyList.append(Enemy(100, "wolf", "water", 1050, 1100, wolfimg, "none", 20, False, 0))
    enemyList.append(Enemy(150, "zombie", "water", 1050, 1400, zomimg, "none", 20, False, 0))
    enemyList.append(Enemy(50, "spider", "fire", 1200, 1600, spdrimg, "none", 25, False, 0))
    enemyList.append(Enemy(150, "zombie", "grass", 1300, 1000, zomimg, "none", 20, False, 0))
    enemyList.append(Enemy(100, "wolf", "grass", 1500, 1700, wolfimg, "none", 20, False, 0))
    enemyList.append(Enemy(150, "zombie", "rock", 1600, 700, zomimg, "none", 20, False, 0))
    enemyList.append(Enemy(150, "zombie", "fire", 1950, 1350, zomimg, "none", 20, False, 0))
    enemyList.append(Enemy(100, "skeleton", "fire", 2150, 1100, skltnimg, "none", 20, False, 0))
    enemyList.append(Enemy(80, "ghoul", "rock", 2450, 650, ghlimg, "none", 20, False, 0))
    enemyList.append(Enemy(100, "wolf", "rock", 2650, 900, wolfimg, "none", 20, False, 0))
    enemyList.append(Enemy(80, "ghoul", "water", 2500, 1200, ghlimg, "none", 20, False, 0))

#------------------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------------------    
"""
processing python doesn't have a case switch option so these type charts are horribly ugly; do not venture below unless you want a headache
https://processing.org/reference/switch.html
https://www.pythonpool.com/match-case-python/
"""
def fightTurnThreeStatus(enemyStatus, enemyType):
    if enemyStatus == "burning": 
        if enemyType == "fire": 
            return "none"
        if enemyType == "water": 
            return "none"
        if enemyType == "grass": 
            return "burning"
    if enemyStatus == "wet": 
        if enemyType == "fire":   
            return "wet"
        if enemyType == "water": 
            return "none"
    if enemyStatus == "tangled": 
        if enemyType == "fire": 
            return "none"
        if enemyType == "water": 
            return "overgrown"
    if enemyStatus == "overgrown": 
        if enemyType == "fire": 
            return "none"
    return enemyStatus
            
def fightTurnThreeHealth(enemyStatus, enemyType):
    if enemyStatus == "burning":   
        if enemyType == "fire": 
            return 20 #fire helps fire
        elif enemyType == "grass": 
            return -20 #fire hurts grass
    elif enemyStatus == "wet": 
        if enemyType == "water": 
            return 20 #water helps water
        elif enemyType == "grass": 
            return 20 #water helps grass
    elif enemyStatus == "tangled":  
        if enemyType == "grass": 
            return 20 #grass helps grass
    elif enemyStatus == "overgrown": 
        if enemyType == "water": 
            return -40 #grass hurts water
    return 0

def fightTurnThreeDisplayText(enemyStatus, enemyType):
    if enemyStatus == "burning": 
        if enemyType == "fire": 
            return "The enemy grows stronger from more flames!"
        if enemyType == "water": 
            return "The flames die out quickly."
        if enemyType == "grass": 
            return "The enemy bursts into flames!"
    if enemyStatus == "wet": 
        if enemyType == "fire": 
            return "The water douses the flames!"
        if enemyType == "water": 
            return "The enemy grows stronger from more water!"
        if enemyType == "grass": 
            return "The plants grow stronger from the water!"
    if enemyStatus == "tangled": 
        if enemyType == "fire": 
            return "The fire quickly destroys the vines."
        if enemyType == "water": 
            return "The enemy shrivels and the vines grow enormous!"
        if enemyType == "grass": 
            return "Your grassy vines remain."
    if enemyStatus == "overgrown": 
        if enemyType == "fire": 
            return "The fire quickly destroys the vines."
        if enemyType == "water": 
            return "The vines completely dry the enemy!"
        if enemyType == "grass": 
            return "Your grassy vines remain."
    return "The enemy's status is " + str(enemyStatus)
